from web3 import Web3

def blockchainConnect():
# Specify the network provider
    web3 = Web3(Web3.HTTPProvider('https://proud-purple-star.ethereum-goerli.discover.quiknode.pro/e4cdebf9ad1c695a5e66d0245f402919b6e9b590/'))
    return web3

def unlockAccount():
    # Set your account private key
    deployer_private_key = "b437656a5b100e130bda1bae90ed44b1048307edfeb27fde9a4d0b156d822b0b"
    account = blockchainConnect().eth.account.from_key(deployer_private_key)
    blockchainConnect().eth.default_account = account.address
    return account

def instantiateContract():
    blockchainConnect()
    unlockAccount()
    # Load the compiled contract ABI and address
    contract_address = '0xAF8fdD770F11be58402dba6ecc33b5a6DEBbA203'#'0xFcE80f32b94f769f96f7Bb66991A8e3b08fF51b9' #0x9BE7d15eCB044e49A37dFb7af3e2613D01BBf1Fe
    contract_abi = [{"stateMutability": "nonpayable", "type": "function", "name": "recordLearningExchange", "inputs": [{"name": "exchangeId", "type": "uint256"}, {"name": "node", "type": "address"}, {"name": "contribution", "type": "uint256"}], "outputs": []}, {"stateMutability": "nonpayable", "type": "function", "name": "proposeTermsAndConditions", "inputs": [{"name": "agreementId", "type": "uint256"}, {"name": "participant1", "type": "address"}, {"name": "participant2", "type": "address"}, {"name": "terms", "type": "string"}], "outputs": []}, {"stateMutability": "view", "type": "function", "name": "getDataSharingAgreement", "inputs": [{"name": "agreementId", "type": "uint256"}], "outputs": [{"name": "", "type": "tuple", "components": [{"name": "agreementId", "type": "uint256"}, {"name": "participants", "type": "address[2]"}, {"name": "terms", "type": "string"}, {"name": "isActive", "type": "bool"}]}]}, {"stateMutability": "nonpayable", "type": "function", "name": "proposeTermUpdate", "inputs": [{"name": "agreementId", "type": "uint256"}, {"name": "newTerms", "type": "string"}], "outputs": []}, {"stateMutability": "nonpayable", "type": "function", "name": "proposeTermination", "inputs": [{"name": "agreementId", "type": "uint256"}], "outputs": []}, {"stateMutability": "nonpayable", "type": "function", "name": "updateModel", "inputs": [{"name": "modelUpdate", "type": "string"}, {"name": "version", "type": "uint256"}], "outputs": []}, {"stateMutability": "nonpayable", "type": "function", "name": "initializeFL", "inputs": [], "outputs": []}, {"stateMutability": "nonpayable", "type": "function", "name": "startTrainingRound", "inputs": [{"name": "newModelVersion", "type": "uint256"}], "outputs": []}, {"stateMutability": "view", "type": "function", "name": "getTrainingRound", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"stateMutability": "nonpayable", "type": "function", "name": "aggregateModel", "inputs": [{"name": "aggregatedModelParam", "type": "string"}], "outputs": []}, {"stateMutability": "nonpayable", "type": "function", "name": "stopTrainingRound", "inputs": [], "outputs": []}, {"stateMutability": "view", "type": "function", "name": "getModelMetadata", "inputs": [], "outputs": [{"name": "", "type": "tuple", "components": [{"name": "version", "type": "uint256"}, {"name": "weights", "type": "string"}]}]}, {"stateMutability": "view", "type": "function", "name": "getCurrentModelVersion", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"stateMutability": "view", "type": "function", "name": "getCurrentModelWeights", "inputs": [], "outputs": [{"name": "", "type": "string"}]}, {"stateMutability": "view", "type": "function", "name": "getFLNode", "inputs": [{"name": "nodeId", "type": "uint256"}], "outputs": [{"name": "", "type": "tuple", "components": [{"name": "id", "type": "uint32"}, {"name": "name", "type": "string"}, {"name": "weight", "type": "uint32"}]}]}, {"stateMutability": "view", "type": "function", "name": "getFLAggregator", "inputs": [], "outputs": [{"name": "", "type": "tuple", "components": [{"name": "name", "type": "string"}, {"name": "weight", "type": "uint32"}]}]}, {"stateMutability": "view", "type": "function", "name": "learningExchanges", "inputs": [{"name": "arg0", "type": "uint256"}], "outputs": [{"name": "", "type": "tuple", "components": [{"name": "node", "type": "address"}, {"name": "contribution", "type": "uint256"}]}]}, {"stateMutability": "view", "type": "function", "name": "dataSharingAgreements", "inputs": [{"name": "arg0", "type": "uint256"}], "outputs": [{"name": "", "type": "tuple", "components": [{"name": "agreementId", "type": "uint256"}, {"name": "participants", "type": "address[2]"}, {"name": "terms", "type": "string"}, {"name": "isActive", "type": "bool"}]}]}, {"stateMutability": "view", "type": "function", "name": "dataSharingAgreementKeys", "inputs": [{"name": "arg0", "type": "uint256"}], "outputs": [{"name": "", "type": "uint256"}]}, {"stateMutability": "view", "type": "function", "name": "dataSharingAgreementLength", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"stateMutability": "view", "type": "function", "name": "flNodes", "inputs": [{"name": "arg0", "type": "uint256"}], "outputs": [{"name": "", "type": "tuple", "components": [{"name": "id", "type": "uint32"}, {"name": "name", "type": "string"}, {"name": "weight", "type": "uint32"}]}]}, {"stateMutability": "view", "type": "function", "name": "flAggregator", "inputs": [], "outputs": [{"name": "", "type": "tuple", "components": [{"name": "name", "type": "string"}, {"name": "weight", "type": "uint32"}]}]}, {"stateMutability": "view", "type": "function", "name": "modelMetadata", "inputs": [], "outputs": [{"name": "", "type": "tuple", "components": [{"name": "version", "type": "uint256"}, {"name": "weights", "type": "string"}]}]}]
    
    # Create an instance of the contract
    contract = blockchainConnect().eth.contract(address=contract_address, abi=contract_abi)

    return contract